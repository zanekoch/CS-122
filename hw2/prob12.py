def keyCreator(i): #i is the index of the row
    row = text[i:] + text[:i] #gets the cycled row
    return row

def lastLetter(i):
    row = text[i:] + text[:i]
    return row[len(text) - 1]

def BWT(text):
    #list of numbers 0->len(text)-1 that correspond to the unsorted rows of cycled matrix
    #intiially index i corresponds to row number i
    numList = [i for i in range(0,len(text))]
    #sorts the list in place based on the cycled strings, now index i corresponds to some new row
    numList.sort(key=keyCreator)
    #get the last column of the matrix
    lastCol = ""
    for row in numList:
        lastCol += lastLetter(row)
    return lastCol

if __name__ == '__main__':
    text = "GACTTGGGTGTCTCCAAAATTTCTCCCGCAGGCTATACAAGTGGTAACGGGGGGGAACGATTTGCTCCAATAATACAGACGGTCGCGGCCAGACGAAACTACTCCTATTATTCAGGTATGGTGGTTAATGTGGCAGCCTACGTCGTCCACGACCGTATCGCGTTGGAACGGGGAGAACGCGCCTCAATTACGTTGATAGGGAGTGATTCCCAATGCCCACCCAATGAGTAGAAGCACAGCTCAGACAGCAAGGCTATGACTAGTTATATGTGTGAGCGGCTCTGTAAGAACGGAAAGACCGAGACCCTCCGTAATCATGCGCTCTCAAATTCAATACAAGGCAACACTCGGAGCCAATCTGCCAAAGGGAAACATACGTCGTATCTCTCCATACGGAAGGACACAGTTAATGTCGTATATCGTTTTGTTATAGACTTGCATCCTTTTAGCCCGTCAATCAGGCCACCCGCTGGTAAGTTTCACCGCAACATTGCCTGGCCTTTTGATCGAATCTGGAGCAGGCTGTCTTCTTAACGCTGACAGAGGTCAGGAACCCTTGCGGAGCAAGGTTTGTTTATAGGGTTCGCGGCTATAGAAGCGGCAAGAATCCTAAATCCTGACCTGACCTTGGGGAGCAAGTACAATTGATTTGGGTCGTGCCTTTGCTTGCCACGCTATCAATCTGTAGGAAAACGGAACGCGCGTCCATCGGGTACATGTGCTACGCCAGGACCCCACCGATAAGTTACGCCCATACGAAGCAAGGCGCCTGTGGGGCTAAGCACATGTATAGTAGTTGCA$"
    lastCol = BWT(text)
    print(lastCol)
